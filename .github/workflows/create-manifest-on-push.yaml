  # This workflow is used to update the kubernetes secret manifest on synlig-iac. 
# The trigger to run would be:
# - There is an push to main
# - The push contains a change logstash pipeline file

name: Update Pipeline Secret Manifest 
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'logstash/pipeline/**'

jobs:
  run-pipeline-tests:
    runs-on: ubuntu-latest 
    steps:
        - uses: actions/checkout@v4

  create-pipeline-manifest:
    runs-on: ubuntu-latest
    steps:
      - name: Install Applications
        shell: bash
        if: ${{ env.ACT && runner.os == 'Linux' }}
        run: |
          sudo apt update \
          && sudo apt-get update \
          && sudo apt-get install -y tree 
      - name: Install kubectl
        shell: bash
        if: ${{ env.ACT && runner.os == 'Linux' }}
        run: |
          (type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) \
            && sudo apt-get install -y apt-transport-https ca-certificates curl gnupg \
            && sudo mkdir -p -m 755 /etc/apt/keyrings \
            && curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg \
            && sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg \
            && echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list \
            && sudo chmod 644 /etc/apt/sources.list.d/kubernetes.list \
            && sudo apt-get update \
            && sudo apt-get install -y kubectl 

      - name: Install GitHub CLI
        shell: bash
        if: ${{ env.ACT && runner.os == 'Linux' }}
        run: |
          (type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) \
            && sudo mkdir -p -m 755 /etc/apt/keyrings \
            && out=$(mktemp) && wget -nv -O$out https://cli.github.com/packages/githubcli-archive-keyring.gpg \
            && cat $out | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
            && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
            && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
            && sudo apt update \
            && sudo apt install gh -y
      - id: checkout
        name: Clone to local
        uses: actions/checkout@v4
        with:
          path: local
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@823fcebdb31bb35fdf2229d9f769b400309430d0 # v46
        with:
          path: local
          dir_names: true
          files: |
            logstash/pipeline/**
      - name: debug
        run: |
          echo "All changed files: ${{ steps.changed-files.outputs.all_changed_files }}"
          echo "Changed files: ${{ steps.changed-files.outputs.changed_files }}"
          echo "Added files: ${{ steps.changed-files.outputs.added_files }}"
          echo "Modified files: ${{ steps.changed-files.outputs.modified_files }}"
          echo "Removed files: ${{ steps.changed-files.outputs.removed_files }}"
          echo "Renamed files: ${{ steps.changed-files.outputs.renamed_files }}"
          echo "Unmerged files: ${{ steps.changed-files.outputs.unmerged_files }}"
      - id: clone-iac
        name: Clone iac
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.IAC_KEY }}
          repository: ${{ vars.IAC_REPO }}
          path: iac
      - name: Show files
        run: |
          tree
      - name: create manifests
        id: create-manifests
        run: |
          echo "Creating manifests"
          for folder in ${{ steps.changed-files.outputs.all_changed_files }}; do
            pipeline_type=$(basename "$folder")
            echo "creating manifest for $pipeline_type"
            cat local/${folder}/* > iac/elk/logstash/kustomize/${pipeline_type}/pipeline.conf
            kubectl kustomize iac/elk/logstash/kustomize/${pipeline_type} > iac/elk/logstash/kustomize/${pipeline_type}/pipeline.yaml
            echo "Manifest created for $pipeline_type"
          done
          echo "Manifests created: ${{ steps.changed-files.outputs.all_changed_files }}"
      - name: Show Manifests
        run: |
          echo "Manifests created:"
          tree iac/elk/logstash/kustomize
      - name: Commit and push
        run: |
          cd iac
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git checkout -b candidate
          git add elk/logstash/kustomize/
          git commit -m "Update manifests" -m "Application Sha ${{ github.sha }}" -m "Pipeline Sha ${{ github.event.after }}" -m "Pipeline files ${{ steps.changed-files.outputs.all_changed_files }}" 
          git push origin candidate

