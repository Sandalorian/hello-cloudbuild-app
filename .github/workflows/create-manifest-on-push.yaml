  # This workflow is used to update the kubernetes secret manifest on synlig-iac. 
# The trigger to run would be:
# - There is an push to main
# - The push contains a change logstash pipeline file

name: Update Pipeline Secret Manifest 
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'logstash/pipeline/**'

jobs:
  run-pipeline-tests:
    runs-on: ubuntu-latest 
    steps:
        - uses: actions/checkout@v4

  get-changed-files-matrix:
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Clone to local
        uses: actions/checkout@v4
        with:
          path: local
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@823fcebdb31bb35fdf2229d9f769b400309430d0 # v46
        with:
          path: local
          dir_names: true
          files: |
            logstash/pipeline/**
      - name: debug
        run: |
          echo "All changed files: ${{ steps.changed-files.outputs.all_changed_files }}"
          echo "Changed files: ${{ steps.changed-files.outputs.changed_files }}"
          echo "Added files: ${{ steps.changed-files.outputs.added_files }}"
          echo "Modified files: ${{ steps.changed-files.outputs.modified_files }}"
          echo "Removed files: ${{ steps.changed-files.outputs.removed_files }}"
          echo "Renamed files: ${{ steps.changed-files.outputs.renamed_files }}"
          echo "Unmerged files: ${{ steps.changed-files.outputs.unmerged_files }}"
      - id: clone-iac
        name: Clone iac
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.IAC_KEY }}
          repository: ${{ vars.IAC_REPO }}
          path: iac
      - run: |
          ls -l *
          tree
      - name: create manifests
        id: create-manifests
        run: |
          echo "Creating manifests"
          for folder in ${{ steps.changed-files.outputs.all_changed_files }}; do
            pipeline_type=$(basename "$folder")
            echo "creating manifest for $pipeline_type"
             echo "iac/elk/manifests/${pipeline_type}-pipeline.yaml" "${folder}" ${{ github.sha }} ${pipeline_type}
            iac/elk/scripts/generate_pipeline_manifest.sh iac/elk/templates/pipeline.yaml.tpl "iac/elk/manifests/${pipeline_type}-pipeline.yaml" "local/${folder}" ${{ github.sha }} ${pipeline_type}
            echo "Manifest created for $pipeline_type"
            echo "Manifest created: iac/elk/manifests/${pipeline_type}-pipeline.yaml"
            cat iac/elk/manifests/${pipeline_type}-pipeline.yaml
          done
          echo "Manifests created: ${{ steps.changed-files.outputs.all_changed_files }}"



  # commit-pipeline-manifest:
  #   needs: get-changed-files-matrix
  #   runs-on: ubuntu-latest
  #   steps: 
  #     - id: checkout
  #       name: Clone local
  #       uses: actions/checkout@v4
  #       with:
  #         path: local
  #     - id: clone-iac
  #       name: Clone iac
  #       uses: actions/checkout@v4
  #       with:
  #         ssh-key: ${{ secrets.IAC_KEY }}
  #         repository: ${{ vars.IAC_REPO }}
  #         path: iac
  #     - run: ls -l
  #     - id: create-new-mainfests
  #       env:
  #         ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
  #       run: echo "${{ matrix.files }}"
